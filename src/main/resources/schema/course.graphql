scalar Url
scalar Date
scalar NonNegativeInt
scalar DateTime

union SmartSearchResult = Hello | Book

type Query {
    allHellos: [Hello]
    oneHello: Hello
    books(author: String): [Book]
    booksByReleased(releaseHistory: ReleaseHistoryInput!): [Book]
    mobileApps(mobileAppFilter: MobileAppFilter): [MobileApp]
    pets(petFilter: PetFilter): [Pet]
    smartSearch(keyword: String): [SmartSearchResult]
    additionalOnRequest: String

    me: User!
    problemLatestList: [Problem!]
    itemSearch(filter: SearchItemFilter): [SearchableItem]
    problemById(id: ID!): Problem!
}

type Mutation {
    addHello(helloInput: HelloInput!): Int
    replaceHelloText(helloInput: HelloInput!): [Hello]
#    replaceHelloText(number: Int!, newText: String!): [Hello]
    deleteHello(number: Int!): Int
}

type Subscription {
    randomStock: Stock
}